{"version":3,"sources":["D:/Git/deployment-studie-job/src/$_gendir lazy","D:/Git/deployment-studie-job/src/app/app.component.css","D:/Git/deployment-studie-job/src/app/app.component.html","D:/Git/deployment-studie-job/src/app/app.component.ts","D:/Git/deployment-studie-job/src/app/app.module.ts","D:/Git/deployment-studie-job/src/app/app.service.ts","D:/Git/deployment-studie-job/src/app/generic-list.ts","D:/Git/deployment-studie-job/src/environments/environment.ts","D:/Git/deployment-studie-job/src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;ACVA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,mVAAmV,cAAc,+SAA+S,MAAM,sQAAsQ,cAAc,oL;;;;;;;;;;;;;;;;;;;;;ACAx3B;AACP;AAIE;AAO7C,IAAa,YAAY;IAKvB,sBAAoB,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;QAF3C,SAAI,GAAG,IAAI,kEAAW,EAAE,CAAC;IAEqB,CAAC;IAE/C,+BAAQ,GAAR;QACE,0EAA0E;QAC1E,oDAAoD;QACpD,6BAA6B;QAC7B,MAAM;QAJR,iBAaC;QAPC,IAAI,CAAC,WAAW,CAAC,wBAAwB,EAAE,CAAC,SAAS,CAAC,gBAAM;YAC1D,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;QACzB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,wBAAwB,EAAE,CAAC,SAAS,CAAC,gBAAM;YAC1D,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAEH,2CAAoB,GAApB;IAEA,CAAC;IAED,mBAAC;AAAD,CAAC;AA1BY,YAAY;IALxB,wEAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,0EAAmC;QACnC,yEAAkC;KACnC,CAAC;yDAMiC,gEAAU,oBAAV,gEAAU;GALhC,YAAY,CA0BxB;AA1BwB;;;;;;;;;;;;;;;;;;;;;;;ACZiC;AACjB;AACI;AAC7C,0DAA0D;AAEX;AACJ;AACA;AAc3C,IAAa,SAAS;IAAtB;IAAyB,CAAC;IAAD,gBAAC;AAAD,CAAC;AAAb,SAAS;IAZrB,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,oEAAY;SACb;QACD,OAAO,EAAE;YACP,gFAAa;YACb,iEAAU;YACV,mEAAW;SACZ;QACD,SAAS,EAAE,CAAC,gEAAU,CAAC;QACvB,SAAS,EAAE,CAAC,oEAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;ACrBqB;AAC6B;AAGzC;AACE;AAKjC,IAAa,UAAU;IAGrB,oBAAoB,KAAW;QAAX,UAAK,GAAL,KAAK,CAAM;QAFvB,aAAQ,GAAG,KAAK,CAAC;IAEU,CAAC;IAEpC,6BAAQ,GAAR;QACE,IAAM,GAAG,GAAM,IAAI,CAAC,QAAQ,WAAQ,CAAC;QACrC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,UAAC,QAAkB;YAC1D,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6CAAwB,GAAxB;QACE,IAAM,GAAG,GAAM,IAAI,CAAC,QAAQ,cAAW,CAAC;QACxC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IAC1E,CAAC;IAED,6CAAwB,GAAxB;QACE,IAAM,GAAG,GAAM,IAAI,CAAC,QAAQ,cAAW,CAAC;QACxC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IAC1E,CAAC;IACH,iBAAC;AAAD,CAAC;AArBY,UAAU;IADtB,yEAAU,EAAE;yDAIgB,2DAAI,oBAAJ,2DAAI;GAHpB,UAAU,CAqBtB;AArBsB;;;;;;;;;;ACVvB;AAAA;IAAA;QACI,mBAAc,GAAG;YACb,WAAW;YACX,kBAAkB;YAClB,oBAAoB;SACvB,CAAC;IACN,CAAC;IAAD,kBAAC;AAAD,CAAC;;;;;;;;;;ACND;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEhF,mFALmF;AAK5E,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,+EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Git/deployment-studie-job/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Git/deployment-studie-job/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n  <h2>Deployment Form</h2>\\n  <hr/>\\n  <form #deploymentForm=\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"hqBuild\\\">Select HQ Build</label>\\n      <select class=\\\"form-control\\\" id=\\\"hqBuild\\\" required>\\n        <option *ngFor=\\\"let hqBuild of hqBuilds\\\" [value]=\\\"Build\\\">{{hqBuild.name}}</option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"hqInstallationType\\\">Select HQ installation type</label>\\n      <select class=\\\"form-control\\\" id=\\\"hqInstallationType\\\" required>\\n        <option *ngFor=\\\"let type of list.hqInstallation\\\" [value]=\\\"type\\\">{{type}}</option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"flBuild\\\">Select FL Build</label>\\n      <select class=\\\"form-control\\\" id=\\\"flBuild\\\" required>\\n        <option *ngFor=\\\"let flBuild of flBuilds\\\" [value]=\\\"Build\\\">{{flBuild.name}}</option>\\n      </select>\\n    </div>\\n\\n    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\"(click)=\\\"submitDeploymentform()\\\">Submit</button>\\n\\n    <hr/>\\n\\n  </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Git/deployment-studie-job/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AppService } from './app.service';\n\nimport { HQBuild } from './hqBuild';\nimport { FLBuild } from './flBuild';\nimport { GenericList } from './generic-list';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  hqBuilds: HQBuild[];\n  flBuilds: FLBuild[];\n  list = new GenericList();\n\n  constructor(private _appService: AppService) {}\n\n  ngOnInit(): void {\n    // *** Somehow generates an error, keeps calling /api/ for some reason ***\n    // this._appService.sayHello().subscribe(result => {\n    //   this.greetings = result;\n    // });\n\n    this._appService.listHQBuildsAsObservable().subscribe(result => {\n      this.hqBuilds = result;\n    });\n\n    this._appService.listFLBuildsAsObservable().subscribe(result => {\n      this.flBuilds = result;\n    });\n  }\n\nsubmitDeploymentForm() {\n  \n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Git/deployment-studie-job/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n// import { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { AppService } from './app.service';\nimport { HttpModule } from '@angular/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    FormsModule\n  ],\n  providers: [AppService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// D:/Git/deployment-studie-job/src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\n\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport { HQBuild } from './hqBuild';\nimport { FLBuild } from './flBuild';\n\n@Injectable()\nexport class AppService {\n  private localUrl = 'api';\n\n  constructor(private _http: Http) { }\n\n  sayHello(): Observable<any> {\n    const url = `${this.localUrl}/hello`;\n    return this._http.get(this.localUrl).map((response: Response) => {\n      return response.text();\n    });\n  }\n\n  listHQBuildsAsObservable(): Observable<HQBuild[]> {\n    const url = `${this.localUrl}/hqbuilds`;\n    return this._http.get(url).map((response: Response) => response.json());\n  }\n\n  listFLBuildsAsObservable(): Observable<FLBuild[]> {\n    const url = `${this.localUrl}/flbuilds`;\n    return this._http.get(url).map((response: Response) => response.json());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Git/deployment-studie-job/src/app/app.service.ts","export class GenericList {\r\n    hqInstallation = [\r\n        'Filebased',\r\n        'Active Directory',\r\n        'Client Certificate'\r\n    ];\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Git/deployment-studie-job/src/app/generic-list.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// D:/Git/deployment-studie-job/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// D:/Git/deployment-studie-job/src/main.ts"],"sourceRoot":"webpack:///"}